log:
  level: DEBUG

api:
  insecure: true
  dashboard: true

entryPoints:
  web:
    address: ":1337"

http:
  routers:
    # hasura:
    #   entryPoints:
    #   - web
    #   service: graphql-engine
    #   rule: Host(`localhost`) && PathPrefix(`/`)
    # auth:
    #   entryPoints:
    #   - web
    #   service: auth
    #   rule: Host(`localhost`) && PathPrefix(`/v1/auth`)
    #   middlewares:
    #   - strip-auth
    # storage:
    #   entryPoints:
    #   - web
    #   service: storage
    #   rule: Host(`localhost`) && PathPrefix(`/v1/storage`)
    #   middlewares:
    #   - strip-suffix
    # functions:
    #   entryPoints:
    #   - web
    #   service: graphql-engine
    #   rule: Host(`localhost`) && PathPrefix(`/v1/functions`)
    #   middlewares:
    #   - strip-functions
    api:
      entryPoints:
      - web
      service: api
      rule: PathPrefix(`/api`)
      middlewares:
      - api-stripprefix
    dashboard:
      entryPoints:
      - web
      service: dashboard
      rule: PathPrefix(`/dashboard`)
      middlewares:
      - redirect-middleware
    dashboard-redirect:
      entryPoints:
      - web
      service: dashboard
      rule: PathPrefix(`/`)
      middlewares:
      - redirect-middleware

  middlewares:
    # strip-auth: 
    #   stripPrefix: 
    #     prefixes:
    #     - /v1/auth
    # strip-functions: 
    #   stripPrefix: 
    #     prefixes:
    #     - /v1/functions
    # strip-suffix: 
    #   replacePathRegex:
    #     regex: "^/v1/storage/(.*)"
    #     replacement: "/v1/$1"
    api-stripprefix:
      stripPrefix: 
        prefixes:
        - /api
    redirect-middleware:
      redirectRegex:
        regex: ".*"
        replacement: "dashboard"

  services:
    # graphql-engine:
    #   loadBalancer:
    #     servers:
    #     - url: http://localhost:8081/
    api:
      loadBalancer:
        server:
          port: 3001
    dashboard-redirect:
      loadBalancer:
        server:
          port: 3001
