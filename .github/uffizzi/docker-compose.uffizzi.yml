version: "3.7"

x-uffizzi:
  ingress:
    service: reverse-proxy
    port: 1337
    
services:
  reverse-proxy:
    image: "traefik:v2.8"
    container_name: "traefik"
    command:
      - "--api.insecure=true" 
      - "--providers.file.directory=/traefik"
      - "--entrypoints.web.address=:1337"
    restart: always
    volumes: 
      - ./.github/uffizzi/traefik:/traefik

  tipi-db:
    container_name: tipi-db
    image: postgres:14
    restart: unless-stopped
    stop_grace_period: 1m
    environment:
      POSTGRES_PASSWORD: tipi
      POSTGRES_USER: tipi
      POSTGRES_DB: tipi

  tipi-redis:
    container_name: tipi-redis
    image: redis:alpine

  api:
    image: meienberger/runtipi:latest
    entrypoint: /bin/sh 
    command:
    - -c 
    - cd /api && INTERNAL_IP=$(hostname -i | awk '{print $1}') npm run start
    restart: unless-stopped
    container_name: api
    depends_on:
      tipi-db:
        condition: service_healthy
    environment:
      # INTERNAL_IP: ${INTERNAL_IP}
      # TIPI_VERSION: ${TIPI_VERSION}
      # JWT_SECRET: ${JWT_SECRET}
      # NGINX_PORT: 80
      POSTGRES_PASSWORD: tipi
      POSTGRES_USERNAME: tipi
      POSTGRES_DBNAME: tipi
      POSTGRES_HOST: tipi-db
      NODE_ENV: production
      # APPS_REPO_ID: ${APPS_REPO_ID}
      # APPS_REPO_URL: ${APPS_REPO_URL}
      # DOMAIN: ${DOMAIN}
      # ARCHITECTURE: ${ARCHITECTURE}
    # labels:
    #   traefik.enable: true
    #   # Web
    #   traefik.http.routers.api.rule: PathPrefix(`/api`)
    #   traefik.http.routers.api.service: api
    #   traefik.http.routers.api.entrypoints: web
    #   traefik.http.routers.api.middlewares: api-stripprefix
    #   traefik.http.services.api.loadbalancer.server.port: 3001
    #   # Websecure
    #   traefik.http.routers.api-secure.rule: (Host(`${DOMAIN}`) && PathPrefix(`/api`))
    #   traefik.http.routers.api-secure.entrypoints: websecure
    #   traefik.http.routers.api-secure.service: api-secure
    #   traefik.http.routers.api-secure.tls.certresolver: myresolver
    #   traefik.http.routers.api-secure.middlewares: api-stripprefix
    #   traefik.http.services.api-secure.loadbalancer.server.port: 3001
    #   # Middlewares
    #   traefik.http.middlewares.api-stripprefix.stripprefix.prefixes: /api

  dashboard:
    image: meienberger/runtipi:latest
    entrypoint: /bin/sh 
    command: 
    - -c 
    - "cd /dashboard && node server.js"
    container_name: dashboard
    environment:
      NODE_ENV: production
    # labels:
    #   traefik.enable: true
    #   traefik.http.routers.dashboard-redirect.rule: PathPrefix("/")
    #   traefik.http.routers.dashboard-redirect.entrypoints: web
    #   traefik.http.routers.dashboard-redirect.middlewares: redirect-middleware
    #   traefik.http.routers.dashboard-redirect.service: dashboard
    #   traefik.http.services.dashboard-redirect.loadbalancer.server.port: 3000

    #   traefik.http.routers.dashboard-redirect-secure.rule: Host(`${DOMAIN}`) && PathPrefix(`/`)
    #   traefik.http.routers.dashboard-redirect-secure.entrypoints: websecure
    #   traefik.http.routers.dashboard-redirect-secure.middlewares: redirect-middleware
    #   traefik.http.routers.dashboard-redirect-secure.service: dashboard
    #   traefik.http.routers.dashboard-redirect-secure.tls.certresolver: myresolver
    #   traefik.http.services.dashboard-redirect-secure.loadbalancer.server.port: 3000

    #   # Web
    #   traefik.http.routers.dashboard.rule: PathPrefix("/dashboard")
    #   traefik.http.routers.dashboard.service: dashboard
    #   traefik.http.routers.dashboard.entrypoints: web
    #   traefik.http.services.dashboard.loadbalancer.server.port: 3000
    #   # Websecure
    #   traefik.http.routers.dashboard-secure.rule: Host(`${DOMAIN}`) && PathPrefix(`/dashboard`)
    #   traefik.http.routers.dashboard-secure.service: dashboard-secure
    #   traefik.http.routers.dashboard-secure.entrypoints: websecure
    #   traefik.http.routers.dashboard-secure.tls.certresolver: myresolver
    #   traefik.http.services.dashboard-secure.loadbalancer.server.port: 3000
    #   # Middlewares
    #   traefik.http.middlewares.redirect-middleware.redirectregex.regex: .*
    #   traefik.http.middlewares.redirect-middleware.redirectregex.replacement: /dashboard
